/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package biblioteca;

import java.io.FileWriter;
import java.io.IOException;
import java.time.LocalDate;
import javax.swing.JOptionPane;

/**
 *
 * @author Henry
 */
public class RegistrarPrestamo extends javax.swing.JFrame {

    /**
     * Creates new form RegistrarPrestamo
     */
    public RegistrarPrestamo() {
    initComponents();
    setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
    setLocationRelativeTo(null);
    cargarLibrosDisponibles(); 
     cargarUsuariosEstudiantes();
}
    
    private Usuario obtenerUsuarioPorNombre(String nombre) {
  
    try {
        java.io.File archivo = new java.io.File("usuarios.txt");
        java.util.Scanner sc = new java.util.Scanner(archivo);

        while (sc.hasNextLine()) {
            String linea = sc.nextLine().trim();
            if (linea.isEmpty()) continue;

            String[] datos = linea.split(",");
            
            if (datos.length >= 4 && datos[1].trim().equalsIgnoreCase(nombre)) {
                return new Usuario(datos[0], datos[1], datos[2], datos[3]);
            }
        }

        sc.close();
    } catch (IOException e) {
        JOptionPane.showMessageDialog(this, "Error al cargar los usuarios.");
    }

    return null; 
}

    
    private Libro obtenerLibroPorTitulo(String titulo) {
   
    try {
        java.io.File archivo = new java.io.File("libros.txt");
        java.util.Scanner sc = new java.util.Scanner(archivo);

        while (sc.hasNextLine()) {
            String linea = sc.nextLine().trim();
            if (linea.isEmpty()) continue;

            String[] datos = linea.split(";");
            
            if (datos.length >= 3 && datos[0].trim().equalsIgnoreCase(titulo)) {
                boolean disponible = Boolean.parseBoolean(datos[2].trim());
                return new Libro(datos[0], datos[1], disponible);
            }
        }

        sc.close();
    } catch (IOException e) {
        JOptionPane.showMessageDialog(this, "Error al cargar los libros.");
    }

    return null;  
}


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btnRPrestamo = new javax.swing.JButton();
        comboLibroDisponibles = new javax.swing.JComboBox<>();
        UsuariosEstudiante = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Segoe UI Black", 2, 18)); // NOI18N
        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/icons8-préstamo-personal-50.png"))); // NOI18N
        jLabel1.setText("Pedir un libro ");

        jLabel2.setFont(new java.awt.Font("Segoe UI Black", 2, 18)); // NOI18N
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/icons8-usuario-50 (1).png"))); // NOI18N
        jLabel2.setText("Usuario");

        jLabel3.setFont(new java.awt.Font("Segoe UI Black", 2, 18)); // NOI18N
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/icons8-libro-50.png"))); // NOI18N
        jLabel3.setText("Libros Disponibles");

        btnRPrestamo.setBackground(new java.awt.Color(204, 255, 255));
        btnRPrestamo.setFont(new java.awt.Font("Segoe UI", 2, 18)); // NOI18N
        btnRPrestamo.setText("Registrar Prestamo");
        btnRPrestamo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRPrestamoActionPerformed(evt);
            }
        });

        comboLibroDisponibles.setBackground(new java.awt.Color(204, 255, 255));
        comboLibroDisponibles.setFont(new java.awt.Font("Segoe UI", 2, 14)); // NOI18N

        UsuariosEstudiante.setFont(new java.awt.Font("Segoe UI", 2, 14)); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(207, 207, 207)
                        .addComponent(jLabel1))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addComponent(UsuariosEstudiante, javax.swing.GroupLayout.PREFERRED_SIZE, 379, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnRPrestamo, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(comboLibroDisponibles, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(112, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addGap(82, 82, 82)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(UsuariosEstudiante, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(60, 60, 60)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(comboLibroDisponibles, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 95, Short.MAX_VALUE)
                .addComponent(btnRPrestamo, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRPrestamoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRPrestamoActionPerformed
       
    String usuarioSeleccionado = (String) UsuariosEstudiante.getSelectedItem();
    String libroSeleccionado = (String) comboLibroDisponibles.getSelectedItem();

    if (usuarioSeleccionado == null || usuarioSeleccionado.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Debe seleccionar un usuario estudiante.");
        return;
    }
    if (libroSeleccionado == null || libroSeleccionado.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Debe seleccionar un libro disponible.");
        return;
    }

    LocalDate fecha = LocalDate.now();

    Usuario usuario = obtenerUsuarioPorNombre(usuarioSeleccionado);
    Libro libro = obtenerLibroPorTitulo(libroSeleccionado);

    
    Prestamo nuevoPrestamo = new Prestamo(usuario, libro, fecha);

    
    try (FileWriter fw = new FileWriter("prestamos.txt", true)) {
        fw.write(nuevoPrestamo.getUsuario().getNombre() + ";" + 
                 nuevoPrestamo.getLibro().getTitulo() + ";" + 
                 nuevoPrestamo.getFechaPrestamo().toString() + ";" + 
                 nuevoPrestamo.isDevuelto() + "\n");
        JOptionPane.showMessageDialog(this, "Préstamo registrado.");

       
        try {
            java.io.File archivo = new java.io.File("libros.txt");
            java.util.List<String> lineas = new java.util.ArrayList<>();
            java.util.Scanner sc = new java.util.Scanner(archivo);

            while (sc.hasNextLine()) {
                String linea = sc.nextLine();
                String[] datos = linea.split(";");

                
                if (datos[0].equals(libroSeleccionado)) {
                    linea = datos[0] + ";" + datos[1] + ";false"; 
                }
                lineas.add(linea);
            }
            sc.close();

            
            java.io.PrintWriter pw = new java.io.PrintWriter(archivo);
            for (String l : lineas) {
                pw.println(l);
            }
            pw.close();
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "Error al actualizar la disponibilidad del libro.");
        }

       
        cargarLibrosDisponibles();
        cargarUsuariosEstudiantes();

    } catch (IOException e) {
        JOptionPane.showMessageDialog(this, "Error al registrar el préstamo.");
    }
            
    }//GEN-LAST:event_btnRPrestamoActionPerformed
        private void cargarLibrosDisponibles() {
    comboLibroDisponibles.removeAllItems();

    try {
        java.io.File archivo = new java.io.File("libros.txt");
        java.util.Scanner sc = new java.util.Scanner(archivo);

        while (sc.hasNextLine()) {
            String linea = sc.nextLine();
            String[] datos = linea.split(";");
            if (datos.length == 3 && datos[2].equalsIgnoreCase("true")) {
                comboLibroDisponibles.addItem(datos[0]);
            }
        }
        sc.close();
    } catch (IOException e) {
        JOptionPane.showMessageDialog(this, "Error al cargar libros disponibles.");
    }
}
        
      private void cargarUsuariosEstudiantes() {
    UsuariosEstudiante.removeAllItems(); 

    try {
        java.io.File archivo = new java.io.File("usuarios.txt");
        java.util.Scanner sc = new java.util.Scanner(archivo);

        while (sc.hasNextLine()) {
            String linea = sc.nextLine().trim(); 
            if (linea.isEmpty()) continue;

            String[] datos = linea.split(",");
            
            if (datos.length >= 4 && datos[3].trim().equalsIgnoreCase("Estudiante")) {
                UsuariosEstudiante.addItem(datos[1].trim()); 
            }
        }

        sc.close();
    } catch (IOException e) {
        JOptionPane.showMessageDialog(this, "Error al cargar los usuarios estudiantes.");
    }
}

   
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegistrarPrestamo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegistrarPrestamo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegistrarPrestamo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegistrarPrestamo.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RegistrarPrestamo().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> UsuariosEstudiante;
    private javax.swing.JButton btnRPrestamo;
    private javax.swing.JComboBox<String> comboLibroDisponibles;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
